{"version":3,"sources":["webpack:///src/app/register/register.page.html","webpack:///src/app/register/register-routing.module.ts","webpack:///src/app/register/register.module.ts","webpack:///src/app/register/register.page.scss","webpack:///src/app/register/register.page.ts"],"names":["routes","path","component","RegisterPageRoutingModule","imports","forChild","exports","RegisterPageModule","declarations","RegisterPage","toastCtrl","loadingCtl","afAuth","navCtl","user","formValidation","loader","create","message","present","createUserWithEmailAndPassword","email","password","then","data","console","log","showToast","navigateRoot","dismiss","duration","toastData","selector","template"],"mappings":"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","file":"register-register-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>Register</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n\\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Username</ion-label>\\n\\t\\t  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Password</ion-label>\\n\\t\\t  <ion-input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\t  </ion-list>\\n\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"register(user)\\\">Register</ion-button>\\n    \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RegisterPage } from './register.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RegisterPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RegisterPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RegisterPageRoutingModule } from './register-routing.module';\n\nimport { RegisterPage } from './register.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RegisterPageRoutingModule\n  ],\n  declarations: [RegisterPage]\n})\nexport class RegisterPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JlZ2lzdGVyL3JlZ2lzdGVyLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.model'\nimport { from } from 'rxjs';\nimport { ToastController, LoadingController, NavController } from '@ionic/angular';\nimport { HAMMER_LOADER } from '@angular/platform-browser';\nimport { AngularFireAuth } from '@angular/fire/auth';\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.page.html',\n  styleUrls: ['./register.page.scss'],\n})\nexport class RegisterPage implements OnInit {\n  user = {} as User;\n  constructor(private toastCtrl: ToastController, private loadingCtl: LoadingController, private afAuth: AngularFireAuth,private navCtl: NavController) { }\n\n  ngOnInit() {\n  }\n\n  async register(user: User) {\n    if (this.formValidation()) {\n      let loader = this.loadingCtl.create({\n        message: \"Please wait ...\"\n      });\n      (await loader).present();\n\n      try {\n        await this.afAuth.createUserWithEmailAndPassword(user.email, user.password).then(data => \n         {console.log(data);\n          this.showToast(\"account created successfully\");\n          this.navCtl.navigateRoot(\"login\");});\n      } catch (error) {\n        this.showToast(error);\n      }\n\n      (await loader).dismiss();\n    }\n  }\n\n  formValidation() {\n    if (!this.user.email) {\n      this.showToast(\"Enter Email\");\n      return false;\n    }\n    if (!this.user.email) {\n      this.showToast(\"Enter Password\");\n      return false;\n    }\n    return true;\n  }\n\n  showToast(message: string) {\n    this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    }).then(toastData => toastData.present());\n  }\n}\n"]}