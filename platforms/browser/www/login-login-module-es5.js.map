{"version":3,"sources":["webpack:///src/app/login/login.page.html","webpack:///src/app/login/login-routing.module.ts","webpack:///src/app/login/login.module.ts","webpack:///src/app/login/login.page.scss","webpack:///src/app/login/login.page.ts"],"names":["routes","path","component","LoginPageRoutingModule","imports","forChild","exports","LoginPageModule","declarations","LoginPage","toastCtrl","loadingCtl","afAuth","navCtl","UserService","user","formValidation","loader","create","message","present","signInWithEmailAndPassword","email","password","res","setUser","username","uid","navigateRoot","showToast","dismiss","duration","then","toastData","selector","template"],"mappings":"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","file":"login-login-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n\\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Username</ion-label>\\n\\t\\t  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Password</ion-label>\\n\\t\\t  <ion-input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\t  </ion-list>\\n\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"login(user)\\\">Login</ion-button>\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"light\\\" [routerLink]=\\\"['/register']\\\">Register</ion-button>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { ToastController, LoadingController, NavController } from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { UserService } from '../services/user.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  user = {} as User;\n  constructor(private toastCtrl: ToastController, private loadingCtl: LoadingController, private afAuth: AngularFireAuth,private navCtl: NavController, private UserService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  async login(user: User){\n    if (this.formValidation()) {\n      let loader = this.loadingCtl.create({\n        message: \"Please wait ...\"\n      });\n      (await loader).present();\n\n      try {\n        const res = await this.afAuth.signInWithEmailAndPassword(user.email, user.password);\n\n          if(res.user){\n            this.UserService.setUser({username : user.email,\n              uid: res.user.uid})\n            if(res.user.email == 'test@email.com'){\n              this.navCtl.navigateRoot(\"admin\");\n            }\n            else{\n              \n              \n\n                \n                this.navCtl.navigateRoot(\"home\");\n            }\n            \n           }\n      } catch (error) {\n        this.showToast(error);\n      }\n\n      (await loader).dismiss();\n    }\n  }\n\n  formValidation() {\n    if (!this.user.email) {\n      this.showToast(\"Enter Email\");\n      return false;\n    }\n    if (!this.user.email) {\n      this.showToast(\"Enter Password\");\n      return false;\n    }\n    return true;\n  }\n\n  showToast(message: string) {\n    this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    }).then(toastData => toastData.present());\n  }\n\n}\n"]}