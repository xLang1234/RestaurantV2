{"version":3,"sources":["./src/app/profile/profile.page.html","./src/app/profile/profile-routing.module.ts","./src/app/profile/profile.module.ts","./src/app/profile/profile.page.scss","./src/app/profile/profile.page.ts"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Profile\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n\\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Username</ion-label>\\n\\t\\t  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\n\\t  \\n\\t  </ion-list>\\n\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"updateProfile(user)\\\">Reset Password</ion-button>\\n    \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service'\nimport { User } from '../models/user.model'\nimport { from } from 'rxjs';\nimport { ToastController, LoadingController, NavController } from '@ionic/angular';\nimport { HAMMER_LOADER } from '@angular/platform-browser';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  username: any= \"\";\n  user = {} as User;  \n  constructor(private toastCtrl: ToastController, private loadingCtl: LoadingController, private afAuth: AngularFireAuth,private navCtl: NavController,private UserService: UserService) { }\n\n  ngOnInit() {\n    this.username = this.UserService.getUID().username;\n    this.user.email = this.username;\n    this.user.password = \"\";\n  }\n\n  async updateProfile(user: User) {\n    // if (this.formValidation()) {\n      let loader = this.loadingCtl.create({\n        message: \"Please wait ...\"\n      });\n      (await loader).present();\n\n      try {\n        await this.afAuth.sendPasswordResetEmail(user.email).then(data => \n         {\n          this.showToast(\"Please check you email for reset link\");\n          this.navCtl.navigateRoot(\"login\");});\n      } catch (error) {\n        this.showToast(error);\n      }\n\n      (await loader).dismiss();\n    // }\n  }\n\n  formValidation() {\n    if (!this.user.email) {\n      this.showToast(\"Enter Email\");\n      return false;\n    }\n    if (!this.user.email) {\n      this.showToast(\"Enter Password\");\n      return false;\n    }\n    return true;\n  }\n\n  showToast(message: string) {\n    this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    }).then(toastData => toastData.present());\n  }\n\n}\n"],"sourceRoot":"webpack:///"}