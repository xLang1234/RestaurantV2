{"version":3,"sources":["webpack:///src/app/profile/profile.page.html","webpack:///src/app/profile/profile-routing.module.ts","webpack:///src/app/profile/profile.module.ts","webpack:///src/app/profile/profile.page.scss","webpack:///src/app/profile/profile.page.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","ProfilePage","toastCtrl","loadingCtl","afAuth","navCtl","UserService","username","user","getUID","email","password","loader","create","message","present","sendPasswordResetEmail","then","data","showToast","navigateRoot","dismiss","duration","toastData","selector","template"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>\\n      Profile\\n    </ion-title>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button autoHide=\\\"false\\\"></ion-menu-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list>\\n\\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Username</ion-label>\\n\\t\\t  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\n\\t  \\n\\t  </ion-list>\\n\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"updateProfile(user)\\\">Reset Password</ion-button>\\n    \\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MifQ== */\";","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../services/user.service'\nimport { User } from '../models/user.model'\nimport { from } from 'rxjs';\nimport { ToastController, LoadingController, NavController } from '@ionic/angular';\nimport { HAMMER_LOADER } from '@angular/platform-browser';\nimport { AngularFireAuth } from '@angular/fire/auth';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.page.html',\n  styleUrls: ['./profile.page.scss'],\n})\nexport class ProfilePage implements OnInit {\n  username: any= \"\";\n  user = {} as User;  \n  constructor(private toastCtrl: ToastController, private loadingCtl: LoadingController, private afAuth: AngularFireAuth,private navCtl: NavController,private UserService: UserService) { }\n\n  ngOnInit() {\n    this.username = this.UserService.getUID().username;\n    this.user.email = this.username;\n    this.user.password = \"\";\n  }\n\n  async updateProfile(user: User) {\n    // if (this.formValidation()) {\n      let loader = this.loadingCtl.create({\n        message: \"Please wait ...\"\n      });\n      (await loader).present();\n\n      try {\n        await this.afAuth.sendPasswordResetEmail(user.email).then(data => \n         {\n          this.showToast(\"Please check you email for reset link\");\n          this.navCtl.navigateRoot(\"login\");});\n      } catch (error) {\n        this.showToast(error);\n      }\n\n      (await loader).dismiss();\n    // }\n  }\n\n  formValidation() {\n    if (!this.user.email) {\n      this.showToast(\"Enter Email\");\n      return false;\n    }\n    if (!this.user.email) {\n      this.showToast(\"Enter Password\");\n      return false;\n    }\n    return true;\n  }\n\n  showToast(message: string) {\n    this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    }).then(toastData => toastData.present());\n  }\n\n}\n"]}