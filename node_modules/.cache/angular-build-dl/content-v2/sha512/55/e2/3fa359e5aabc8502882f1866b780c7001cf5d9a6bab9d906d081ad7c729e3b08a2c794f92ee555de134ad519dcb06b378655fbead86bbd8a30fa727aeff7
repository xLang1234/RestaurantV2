{"version":3,"sources":["./src/app/login/login.page.html","./src/app/login/login-routing.module.ts","./src/app/login/login.module.ts","./src/app/login/login.page.scss","./src/app/login/login.page.ts"],"names":[],"mappings":"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","file":"login-login-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-title>login</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-list>\\n\\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Username</ion-label>\\n\\t\\t  <ion-input type=\\\"text\\\" [(ngModel)]=\\\"user.email\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\t\\t<ion-item>\\n\\t\\t  <ion-label position=\\\"floating\\\">Password</ion-label>\\n\\t\\t  <ion-input type=\\\"password\\\" [(ngModel)]=\\\"user.password\\\"></ion-input>\\n\\t\\t</ion-item>\\n\\t  \\n\\t  </ion-list>\\n\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"primary\\\" (click)=\\\"login(user)\\\">Login</ion-button>\\n    <ion-button fill=\\\"solid\\\" expand=\\\"block\\\" color=\\\"light\\\" [routerLink]=\\\"['/register']\\\">Register</ion-button>\\n\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginPage } from './login.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: LoginPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class LoginPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { LoginPageRoutingModule } from './login-routing.module';\n\nimport { LoginPage } from './login.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    LoginPageRoutingModule\n  ],\n  declarations: [LoginPage]\n})\nexport class LoginPageModule {}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLnBhZ2Uuc2NzcyJ9 */\";","import { Component, OnInit } from '@angular/core';\nimport { User } from '../models/user.model';\nimport { ToastController, LoadingController, NavController } from '@ionic/angular';\nimport { AngularFireAuth } from '@angular/fire/auth';\nimport { UserService } from '../services/user.service'\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.page.html',\n  styleUrls: ['./login.page.scss'],\n})\nexport class LoginPage implements OnInit {\n  user = {} as User;\n  constructor(private toastCtrl: ToastController, private loadingCtl: LoadingController, private afAuth: AngularFireAuth,private navCtl: NavController, private UserService: UserService) { }\n\n  ngOnInit() {\n  }\n\n  async login(user: User){\n    if (this.formValidation()) {\n      let loader = this.loadingCtl.create({\n        message: \"Please wait ...\"\n      });\n      (await loader).present();\n\n      try {\n        const res = await this.afAuth.signInWithEmailAndPassword(user.email, user.password);\n\n          if(res.user){\n            this.UserService.setUser({username : user.email,\n              uid: res.user.uid})\n            if(res.user.email == 'test@email.com'){\n              this.navCtl.navigateRoot(\"admin\");\n            }\n            else{\n              \n              \n\n                \n                this.navCtl.navigateRoot(\"home\");\n            }\n            \n           }\n      } catch (error) {\n        this.showToast(error);\n      }\n\n      (await loader).dismiss();\n    }\n  }\n\n  formValidation() {\n    if (!this.user.email) {\n      this.showToast(\"Enter Email\");\n      return false;\n    }\n    if (!this.user.email) {\n      this.showToast(\"Enter Password\");\n      return false;\n    }\n    return true;\n  }\n\n  showToast(message: string) {\n    this.toastCtrl.create({\n      message: message,\n      duration: 3000\n    }).then(toastData => toastData.present());\n  }\n\n}\n"],"sourceRoot":"webpack:///"}